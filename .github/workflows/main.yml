name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test-docker:
    name: Build, Test & Dockerize
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:11
        env:
          MARIADB_DATABASE: webcore_db
          MARIADB_USER: webcore
          MARIADB_PASSWORD: webcore123
          MARIADB_ROOT_PASSWORD: root123
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mariadb-admin ping -h localhost -uroot -proot123"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 1️⃣ Quellcode abrufen
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ JDK 21 installieren
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Verify Java version
        run: java -version

      # 3️⃣ Build & Package
      - name: Build & Package with Maven
        env:
          SPRING_DATASOURCE_URL: jdbc:mariadb://localhost:3306/webcore_db
          SPRING_DATASOURCE_USERNAME: webcore
          SPRING_DATASOURCE_PASSWORD: webcore123
        run: mvn -B clean package -Dmaven.compiler.release=21

      # 4️⃣ Automatisierte Tests
      - name: Run Unit Tests
        run: mvn test

      # 5️⃣ Codequalität prüfen
      - name: Code Quality Check (Checkstyle)
        run: mvn checkstyle:check || echo "Style warnings found"

      # 6️⃣ Docker Buildx Setup
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 7️⃣ Login zu Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 8️⃣ Docker-Image bauen & pushen
      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/webcore-app:latest

      # 9️⃣ Build-Zusammenfassung
      - name: Print build summary
        run: |
          echo "✅ CI/CD build completed successfully on $(date)"
          echo "Java version:" $(java -version 2>&1 | head -n 1)
          echo "Database: MariaDB 11"

  # 🔹 Staging Deployment
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-test-docker
    environment:
      name: staging

    steps:
      - name: Pull image and deploy to staging
        run: |
          echo "Deploying image to staging environment..."
          sleep 5
          echo "✅ Staging deployment successful."

  # 🔹 Production Deployment (mit Genehmigung)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
      # → In GitHub „Environments“ kann hier eine manuelle Genehmigung verlangt werden

    steps:
      - name: Deploy image to production
        run: |
          echo "Waiting for approval..."
          echo "Deploying to production environment..."
          sleep 5
          echo "🚀 Production deployment successful."
